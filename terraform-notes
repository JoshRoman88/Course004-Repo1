commands/arguments:
---------------------
terraform init
terraform validate - checks code loacally for errors. Checks only syntax and variables.
terraform plan - green + = creating, yellow ~ = modifying, red - = destroying
terraform appply
terraform destroy 
terraform fmt - formats typed code in a way to be easy to read. 

Variables
----------
var types:
string
map() ex: map(string)

Can create variables in seperate files, it variable.tf w/ region var.

Calling variable require var. infront of variable name.

Do not need to reference other files within direcroty.

*Data sources - asking for info 

*Best practice: Declare providers in terraform

State
--------
State: Maps configured resouce instances and remote objects.
Make sure to communicate with team when adding hardware changes to instance. 

Terraform Import - can import changes
Terraform import followed by the resource block name and then its usually some kind of id string. Like the resource id in the cloud or something.
Each resource will have a documented import example at the bottom within the online documentation

Best practices - 
State files can contain secrets.
use git ignore to prevent state file from being pushed.
Dont share statefile.

Show state of recource in CLI:
$terraform state show **resource**

aws cli 
---------
Creating new profile in aws for terraform
$ aws configure --profile **profile name**
look into aws configure --profile help

more ~/.aws/config

aws s3api create-bucket --bucket **NAME** --region us-east-1
